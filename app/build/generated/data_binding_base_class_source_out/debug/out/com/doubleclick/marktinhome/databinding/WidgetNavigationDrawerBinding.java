// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubleclick.marktinhome.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WidgetNavigationDrawerBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout appBarRL;

  @NonNull
  public final TextView appBarTitleTV;

  @NonNull
  public final CardView containerCV;

  @NonNull
  public final LinearLayout containerLL;

  @NonNull
  public final ImageView menuIV;

  @NonNull
  public final LinearLayout menuLL;

  @NonNull
  public final ScrollView menuSV;

  @NonNull
  public final RelativeLayout rootLayout;

  private WidgetNavigationDrawerBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout appBarRL, @NonNull TextView appBarTitleTV,
      @NonNull CardView containerCV, @NonNull LinearLayout containerLL, @NonNull ImageView menuIV,
      @NonNull LinearLayout menuLL, @NonNull ScrollView menuSV,
      @NonNull RelativeLayout rootLayout) {
    this.rootView = rootView;
    this.appBarRL = appBarRL;
    this.appBarTitleTV = appBarTitleTV;
    this.containerCV = containerCV;
    this.containerLL = containerLL;
    this.menuIV = menuIV;
    this.menuLL = menuLL;
    this.menuSV = menuSV;
    this.rootLayout = rootLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WidgetNavigationDrawerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WidgetNavigationDrawerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.widget_navigation_drawer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WidgetNavigationDrawerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarRL;
      RelativeLayout appBarRL = ViewBindings.findChildViewById(rootView, id);
      if (appBarRL == null) {
        break missingId;
      }

      id = R.id.appBarTitleTV;
      TextView appBarTitleTV = ViewBindings.findChildViewById(rootView, id);
      if (appBarTitleTV == null) {
        break missingId;
      }

      id = R.id.containerCV;
      CardView containerCV = ViewBindings.findChildViewById(rootView, id);
      if (containerCV == null) {
        break missingId;
      }

      id = R.id.containerLL;
      LinearLayout containerLL = ViewBindings.findChildViewById(rootView, id);
      if (containerLL == null) {
        break missingId;
      }

      id = R.id.menuIV;
      ImageView menuIV = ViewBindings.findChildViewById(rootView, id);
      if (menuIV == null) {
        break missingId;
      }

      id = R.id.menuLL;
      LinearLayout menuLL = ViewBindings.findChildViewById(rootView, id);
      if (menuLL == null) {
        break missingId;
      }

      id = R.id.menuSV;
      ScrollView menuSV = ViewBindings.findChildViewById(rootView, id);
      if (menuSV == null) {
        break missingId;
      }

      RelativeLayout rootLayout = (RelativeLayout) rootView;

      return new WidgetNavigationDrawerBinding((RelativeLayout) rootView, appBarRL, appBarTitleTV,
          containerCV, containerLL, menuIV, menuLL, menuSV, rootLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
