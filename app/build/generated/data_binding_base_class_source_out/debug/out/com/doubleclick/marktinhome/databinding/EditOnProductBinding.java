// Generated by view binder compiler. Do not edit!
package com.doubleclick.marktinhome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.doubleclick.marktinhome.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditOnProductBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView cancel;

  @NonNull
  public final TextInputEditText editProduct;

  @NonNull
  public final TextInputEditText editorder;

  @NonNull
  public final TextView ok;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @NonNull
  public final TextInputLayout textInputLayoutEditOrder;

  private EditOnProductBinding(@NonNull ConstraintLayout rootView, @NonNull TextView cancel,
      @NonNull TextInputEditText editProduct, @NonNull TextInputEditText editorder,
      @NonNull TextView ok, @NonNull TextInputLayout textInputLayout2,
      @NonNull TextInputLayout textInputLayoutEditOrder) {
    this.rootView = rootView;
    this.cancel = cancel;
    this.editProduct = editProduct;
    this.editorder = editorder;
    this.ok = ok;
    this.textInputLayout2 = textInputLayout2;
    this.textInputLayoutEditOrder = textInputLayoutEditOrder;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditOnProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditOnProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_on_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditOnProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel;
      TextView cancel = ViewBindings.findChildViewById(rootView, id);
      if (cancel == null) {
        break missingId;
      }

      id = R.id.editProduct;
      TextInputEditText editProduct = ViewBindings.findChildViewById(rootView, id);
      if (editProduct == null) {
        break missingId;
      }

      id = R.id.editorder;
      TextInputEditText editorder = ViewBindings.findChildViewById(rootView, id);
      if (editorder == null) {
        break missingId;
      }

      id = R.id.ok;
      TextView ok = ViewBindings.findChildViewById(rootView, id);
      if (ok == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      id = R.id.textInputLayoutEditOrder;
      TextInputLayout textInputLayoutEditOrder = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutEditOrder == null) {
        break missingId;
      }

      return new EditOnProductBinding((ConstraintLayout) rootView, cancel, editProduct, editorder,
          ok, textInputLayout2, textInputLayoutEditOrder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
